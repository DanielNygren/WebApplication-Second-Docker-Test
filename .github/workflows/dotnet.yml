name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Sätt versions-variabeln
      run: echo "RELEASE_VERSIONEN=$(echo ${GIT_MESSAGE} | grep -Po '(?<=--version=)[^;]+')" >> $GITHUB_ENV
      env:
        GIT_MESSAGE: ${{github.event.head_commit.message}}

    - name: Test
      run: echo $RELEASE_VERSIONEN

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Loggar in på Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building the Docker Image
      #Build whit Docker image tag
      run: docker build learnetdaniel/webapplicationseconddockertest:$RELEASE_VERSIONEN .

    - name: Pushing the Docker Image
      #Push whit Docker image tag
      run: docker push learnetdaniel/webapplicationseconddockertest:$RELEASE_VERSIONEN

    - name: Install Open VPN
      run: |
        sudo apt update
        sudo apt install -y openvpn openvpn-systemd-resolved

    - name: Connect to VPN
      id: connect_vpn
      uses: "kota65535/github-openvpn-connect-action@v1"
      with:
        config_file: ./.github/vpn/config.ovpn
        #Open vpn username
        username:  ${{ secrets.OVPN_Username}}
        #Open vpn password
        password: ${{ secrets.OVPN_Password}}
        #Open vpn key from profile.ovpn file
        client_key: ${{ secrets.OPEN_VPN_KEY}}

    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
        #IP to servic
        host: ${{ secrets.HOST }}
        #Azure VM username
        username: ${{ secrets.USERNAME }}
        #Azure VM Key
        key: ${{ secrets.KEY }}
        #SSH conation port
        port: ${{ secrets.PORT }}
        #Rollout update to webapp
        script: kubectl rollout restart deployment webapp

    
